<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <!--
    Defines the overall server settings.
    
    Attributes:
      address               - The IP address the server will listen on
      port                  - The port to which the server will listen for connections on.
      ipVersion             - The IP version that the server will operate on. (IPv4/IPv6)
      noDelay               - Whether to disable Nagle's algorithm on TCP sockets
      maxStrikes            - The maximum number of strikes before the client is automatically disconnected.
  -->
  <server address="0.0.0.0" port="4296" ipVersion="IPv4" maxStrikes="3" />

  <!--
    Specifies where DarkRift should look for plugins.
    
    Child Elements:
      pluginSearchPath      - Specifies a file or directory to search
        Attributes
          src               - The path to search.
          createDir         - Whether to create a new directory if not found.
  -->
  <pluginSearch>
    <pluginSearchPath src="Plugins/" createDir="true"/>
    <pluginSearchPath src="LogWriters/" />
  </pluginSearch>
  
  <!--
    The settings for logging server events.
  -->
  <logging>
    <!--
      The writers that will output log messages from the server.
      See the Logging section of the documentation for more information.
      
      Child Elements:
        file
        console
        debug
    -->
    <logWriters>
      <!--
        A writer that will write log events to the given directory.
        
        Attributes:
          name              - The name of the writer for referencing from code.
          levels            - The levels of logs that will be written to this writer.
        
        Child Elements:
          settings          - Defines the settings for this logger.
            Attributes:
              file          - The directory to store log files in.
      -->
      <logWriter name="FileWriter1" type="FileWriter" levels="trace, info, warning, error, fatal">
        <settings file="Logs/{0:d-M-yyyy}/{0:HH-mm-ss tt}.txt" />
      </logWriter>
      
      <!--
        A writer that will write log events to console.
        
        Attributes:
          name              - The name of the writer for referencing from code.
          levels            - The levels of logs that will be written to this writer.
      -->
      <logWriter name="ConsoleWriter1" type="ConsoleWriter" levels="info, warning, error, fatal" />

      <!--
        A writer that will write log events to the debug output.
        
        Attributes:
          name              - The name of the writer for referencing from code.
          levels            - The levels of logs that will be written to this writer.
      -->
      <logWriter name="DebugWriter1" type="DebugWriter" levels="warning, error, fatal" />
    </logWriters>
  </logging>

  <!--
    Defines the plugins that will be loaded by the server.
    
    Attributes:
      loadByDefault         - Whether to load unlisted plugins by default (Default = "false").
      
    Child Elements:
      plugin:
        Defines a plugin which should be loaded into the server.
         
        Attributes:
          type              - The type of plugin.
          load              - Whether to load this plugin (Default = "true").
        
        Child Elements:
          settings          - Defines the settings for this plugin as attributes.
  -->
  <plugins loadByDefault="true">
    <!-- Example:
    <plugin type="Sniffer" load="false" />
    -->
  </plugins>

  <!--
    Defines the settings for storing server data.
    
    Attributes:
      directory             - The directory to store data in.
  -->
  <data directory="Data/"/>
  
  <!--
    Defines databases the server will make available to plugins.
    
    Child Elements:
      database:
        Defines a database that the server will connect to.
      
        Attributes:
          name              - The name that plugins will use to access this database.
          connectionString  - The string used to connect to the database.
  -->
  <databases>

  </databases>
</configuration>